<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML">
  <title>Lab 4: Fourier Series and Its Applications</title>
  <metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m19841</md:content-id>
  <md:title>Lab 4: Fourier Series and Its Applications</md:title>
  <md:abstract/>
  <md:uuid>f4d5501e-b973-42c4-931d-e21bd1f21678</md:uuid>
</metadata>

<content>
    
    <para id="id16517475"/>
    
    <para id="id8604480">In this lab, we examine the representation of periodic signals based on Fourier series. Periodic signals can be represented by a linear combination of an infinite sum of sine waves, as expressed by the trigonometric Fourier series representation.Periodic signals can also be represented by an infinite sum of harmonically related complex exponentials, as expressed by the exponential Fourier series representation. In this lab, we analyze both of these series representations. In particular, we focus on how to compute Fourier series coefficients numerically. </para>
    <section id="id7105360"><title>Fourier Series Signal Decomposition and Reconstruction</title><para id="id3119658">This example helps one to gain an understanding of Fourier series decomposition and reconstruction for periodic signals. The first step involves estimating 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>x</m:mi><m:mo stretchy="false">(</m:mo><m:mi fontstyle="italic">mΔt</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{x \( mΔt \) } {}</m:annotation></m:semantics></m:math> which is a numerical approximation of the analog input signal. Though programming environments deploy discrete values internally, we can obtain a close analog approximation of a continuous-time signal by using a very small 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi fontstyle="italic">Δt</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{Δt} {}</m:annotation></m:semantics></m:math>. That is to say, for all practical purposes, when 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi fontstyle="italic">Δt</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{Δt} {}</m:annotation></m:semantics></m:math> is taken to be very small, we get the analog representation or simulation of the signal. In this example, create four input signals using the listed LabVIEW MathScript functions in Table 1.</para>
	<para id="id12690946"/>
	<table id="id28061491" summary="LabVIEW MathScript Functions for Generating Various Waveforms or Signals">
		<tgroup cols="2">
			<colspec colnum="1" colname="c1"/>
			<colspec colnum="2" colname="c2"/>
			<tbody>
				<row>
					<entry>
						<term>Waveform type</term>
					</entry>
					<entry>
						<term>LabVIEW MathScript function</term>
					</entry>
				</row>
				<row>
					<entry>Square wave</entry>
					<entry><code display="inline">square(T)</code>, T denotes period</entry>
				</row>
				<row>
					<entry>Triangular wave</entry>
					<entry><code display="inline">sawtooth</code><code display="inline">(T,Width)</code>, Width=0.5</entry>
				</row>
				<row>
					<entry>Sawtooth wave</entry>
					<entry><code display="inline">sawtooth</code><code display="inline">(T,Width)</code>, Width=0</entry>
				</row>
				<row>
					<entry>Half wave rectified sine wave</entry>
					<entry><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mo stretchy="true">{</m:mo><m:mtable><m:mtr><m:mtd><m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:mrow><m:mrow><m:mrow><m:mn>2</m:mn><m:mo stretchy="false">∗</m:mo><m:mstyle fontstyle="italic"><m:mrow><m:mtext>pi</m:mtext></m:mrow></m:mstyle></m:mrow><m:mo stretchy="false">∗</m:mo><m:mi>f</m:mi></m:mrow><m:mo stretchy="false">∗</m:mo><m:mi>t</m:mi></m:mrow><m:mo stretchy="false">)</m:mo><m:mrow/></m:mrow></m:mtd><m:mtd><m:mrow><m:mrow><m:mtable><m:mtr><m:mtd><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>for</m:mtext></m:mrow></m:mstyle><m:mrow/></m:mrow></m:mtd><m:mtd><m:mrow><m:mrow><m:mn>0</m:mn><m:mo stretchy="false">≤</m:mo><m:mi>t</m:mi></m:mrow><m:mrow/></m:mrow></m:mtd></m:mtr></m:mtable><m:mo stretchy="false">&lt;</m:mo><m:mrow><m:mi>T</m:mi><m:mo stretchy="false">/</m:mo><m:mn>2</m:mn></m:mrow></m:mrow><m:mrow/></m:mrow></m:mtd></m:mtr><m:mtr><m:mtd><m:mrow><m:mn>0</m:mn><m:mrow/></m:mrow></m:mtd><m:mtd><m:mrow><m:mtable><m:mtr><m:mtd><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>for</m:mtext></m:mrow></m:mstyle><m:mrow/></m:mrow></m:mtd><m:mtd><m:mrow><m:mrow><m:mrow><m:mrow><m:mi>T</m:mi><m:mo stretchy="false">/</m:mo><m:mn>2</m:mn></m:mrow><m:mo stretchy="false">≤</m:mo><m:mi>t</m:mi></m:mrow><m:mo stretchy="false">&lt;</m:mo><m:mi>T</m:mi></m:mrow><m:mrow/></m:mrow></m:mtd></m:mtr></m:mtable><m:mrow/></m:mrow></m:mtd></m:mtr></m:mtable></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{ left lbrace  matrix {
"sin" \( 2* ital "pi"*f*t \)  {} #  matrix {
 ital "for" {} # 0 &lt;= t{}
} &lt;T/2 {} ##
0 {} #  matrix {
 ital "for" {} # T/2 &lt;= t&lt;T{}
} {}
}  right none } {}</m:annotation></m:semantics></m:math>, 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>f</m:mi><m:mo stretchy="false">=</m:mo><m:mrow><m:mn>1</m:mn><m:mo stretchy="false">/</m:mo><m:mi>T</m:mi></m:mrow></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{f=1/T} {}</m:annotation></m:semantics></m:math>denotes frequencyHalf period is sine wave and the other half is made zero</entry>
				</row>
			</tbody>
		</tgroup>
<caption> LabVIEW MathScript Functions for Generating Various Waveforms or Signals </caption>
	</table>
	<para id="id6811649">Use a <code display="inline">switch</code> structure to select different types of input waveforms. Set the switch parameter w as the input and connect it to an <term>Enum Control</term><emphasis>(</emphasis><emphasis>Controls </emphasis><emphasis>→</emphasis><emphasis> Modern </emphasis><emphasis>→</emphasis><emphasis> Ring &amp; Enum </emphasis><emphasis>→</emphasis><emphasis> Enum)</emphasis>. Edit the Enum Control items to include all the waveform types.</para>
	<para id="id11820242">Set Amplitude of input (A), Period of input (T) and Number of Fourier coefficients (N) as control parameters. Determine Fourier coefficients 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>a</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>0</m:mn></m:mrow></m:mstyle></m:msub><m:mi>,</m:mi><m:msub><m:mi>a</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>n</m:mi></m:mrow></m:mstyle></m:msub></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{a rSub { size 8{0} } ,a rSub { size 8{n} } } {}</m:annotation></m:semantics></m:math>and 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:msub><m:mi>b</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>n</m:mi></m:mrow></m:mstyle></m:msub></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{b rSub { size 8{n} } } {}</m:annotation></m:semantics></m:math> and reconstruct the signal from its Fourier coefficients using equations provided in Chapter 4. Determine the error between the input and the reconstructed signal by simply taking the absolute values of 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>x</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">−</m:mo><m:mover accent="true"><m:mi>x</m:mi><m:mo stretchy="false">ˆ</m:mo></m:mover></m:mrow><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{x \( t \)  -  { hat  {x}} \( t \) } {}</m:annotation></m:semantics></m:math>via the LabVIEW MathScript function <code display="inline">abs</code>. Finally, determine the maximum and average errors by using the functions <code display="inline">max</code> and <code display="inline">sum</code>. <link target-id="id7369793"/> shows the completed block diagram of the Fourier series signal decomposition and reconstruction system.</para>
	<para id="id24303860">Display the input signal using a waveform graph. Before displaying the graph, configure it using the function <term>Build Waveform</term><emphasis>(Functions </emphasis><emphasis>→</emphasis><emphasis> Programming </emphasis><emphasis>→</emphasis><emphasis> Waveforms </emphasis><emphasis>→</emphasis><emphasis> Build Waveforms)</emphasis>. Also display the Fourier coefficients, reconstructed signal and error in the waveform graph, and place several numerical indicators to show the values of the Fourier coefficients, maximum error and average error.</para>
	<para id="id11673722"><link target-id="id13376545"/> and <link target-id="id21581141"/> illustrate the front panel of the Fourier series signal decomposition and reconstruction system, respectively. To display all the outputs within a limited screen area, use a <term>Tab Control</term><emphasis>(Controls </emphasis><emphasis>→</emphasis><emphasis> Modern </emphasis><emphasis>→</emphasis><emphasis> Containers </emphasis><emphasis>→</emphasis><emphasis> Tab Control)</emphasis> in the front panel. Here the outputs are arranged in two different tabs: Fourier Series and Signal Reconstruction. </para>
	<para id="id10810365">
		<figure id="id7369793"><media id="id23209855" alt=""><image src="../../media/Fig4_1.png" mime-type="image/png" height="817" width="566"/></media><caption>Block Diagram of Fourier Series Signal Decomposition and Reconstruction Example</caption></figure>
	</para>
	<para id="id19399652"/>
	<para id="id12822396">
		<figure id="id13376545"><media id="id21640401" alt=""><image src="../../media/Fig4_2.png" mime-type="image/png" height="808" width="558"/></media><caption>Front Panel of Fourier Series Signal Decomposition and Reconstruction Example (Fourier Series Tab)</caption></figure>
	</para>
	<para id="id6118981">
		<figure id="id21581141"><media id="id24864795" alt=""><image src="../../media/Fig4_3.png" mime-type="image/png" height="808" width="558"/></media><caption>Front Panel of Fourier Series Signal Decomposition and Reconstruction Example (Signal Reconstruction Tab)</caption></figure>
	</para>
</section>
    <section id="id4080862">
      <title>Linear Circuit Analysis Using Trigonometric Fourier Series</title>
      <para id="id8222945">In this example, let us perform electrical circuit analysis using the trigonometric Fourier series. The ability to decompose any periodic signal into a number of sine waves makes the Fourier series a powerful tool in electrical circuit analysis. The response of a circuit component when a sinusoidal input is applied to its terminals is well-known in circuit analysis. Thus, to obtain the response to any periodic signal, one can decompose the signal into sine waves and perform a linear superposition of the sine waves.</para>
      <para id="id27841245"> Consider a simple RC circuit excited by a periodic input signal as shown in <link target-id="id10573967"/>.</para>
      <para id="id3391937">
        <figure id="id10573967"><media id="id25280380" alt=""><image src="../../media/Fig4_4.png" mime-type="image/png" height="141" width="304"/></media><caption>RC Series Circuit with Periodic Input Voltage</caption></figure>
      </para>
      
      <para id="id15779068">The block diagram of this linear circuit or system is shown in <link target-id="id15834677"/>. Determine the Fourier series coefficients of the input voltage signal as discussed in the previous example. Because the Fourier series involves the sum of sinusoids, phasor analysis can be used to obtain the output voltage 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mo stretchy="false">(</m:mo><m:msub><m:mi>v</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>c</m:mi></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{ \( v rSub { size 8{c} }  \) } {}</m:annotation></m:semantics></m:math>. Let 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi>n</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{n} {}</m:annotation></m:semantics></m:math> represent the number of terms in the Fourier series. By using the voltage divider rule, the output voltage 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mo stretchy="false">(</m:mo><m:msub><m:mi>v</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>c</m:mi></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{ \( v rSub { size 8{c} }  \) } {}</m:annotation></m:semantics></m:math> can be expressed as <link target-id="Ref6" document="m31521"/>,</para>
      
      <equation id="eip-310"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mrow><m:msub><m:mi>v</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:msub><m:mi>c</m:mi><m:mi>n</m:mi></m:msub></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">=</m:mo><m:mfrac><m:mrow><m:mrow><m:mn>1</m:mn><m:mo stretchy="false">/</m:mo><m:mo stretchy="false">(</m:mo></m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>jn</m:mtext></m:mrow></m:mstyle><m:mi fontstyle="italic">ωC</m:mi><m:mo stretchy="false">)</m:mo></m:mrow><m:mrow><m:mrow><m:mi>R</m:mi><m:mo stretchy="false">+</m:mo><m:mrow><m:mn>1</m:mn><m:mo stretchy="false">/</m:mo><m:mo stretchy="false">(</m:mo></m:mrow></m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>jn</m:mtext></m:mrow></m:mstyle><m:mi fontstyle="italic">ωC</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mfrac></m:mrow><m:msub><m:mi>v</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:msub><m:mtext>in</m:mtext><m:mi>n</m:mi></m:msub></m:mrow></m:mstyle></m:mrow></m:mstyle></m:msub></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{v rSub { size 8{c_n} } = {  {1/ \(  ital "jn"ωC \) }  over  {R+1/ \(  ital "jn"ωC \) } } v rSub { size 8{ ital "in"_n} } } {}</m:annotation></m:semantics></m:math>  </equation><para id="id11385975">Because the sine and cosine components of the input voltage are known, one can easily determine the output by adding the individual output components because the circuit is linear. Determine each output voltage component by using <link target-id="eip-310"/>. </para>
      <para id="id6111591"><link target-id="id24200299"/> and <link target-id="id16490201"/> show the front panel of this system for its two tabs. The magnitude and phase of the sine and cosine components are shown in the front panel separately. Furthermore, the tab control is used to show the Fourier series and system output separately. </para>
      <para id="id13425268">
        <figure id="id15834677"><media id="id7236237" alt=""><image src="../../media/Fig4_5.png" mime-type="image/png" height="835" width="578"/></media><caption>Block Diagram of Circuit Analysis with Trigonometric Fourier Series </caption></figure>
      </para>
      
      <para id="id2652417">
        <figure id="id24200299"><media id="id25388781" alt=""><image src="../../media/Fig4_6.png" mime-type="image/png" height="818" width="579"/></media><caption>Front Panel of Circuit Analysis with Trigonometric Fourier Series (Fourier Series Tab)</caption></figure>
      </para>
      
      
      <para id="id4745458">
        <figure id="id16490201"><media id="id26403769" alt=""><image src="../../media/Fig4_7.png" mime-type="image/png" height="818" width="579"/></media><caption>Front Panel of Circuit Analysis with Trigonometric Fourier Series (System Output Tab)</caption></figure>
      </para>
      
      
</section>

      <section id="element-616"><title>Lab Exercises</title><exercise id="eip-85"><problem id="eip-425">
			<para id="id7013889">
				<term>RL Circuit Analysis</term>
			</para>
			<para id="id26733974">Build a hybrid VI to analyze the RL circuit shown in <link target-id="id8101852"/> using Fourier series.</para>
			<para id="id20267046">
				<figure id="id8101852"><media id="id25350888" alt=""><image src="../../media/Fig4_8.png" mime-type="image/png" height="133" width="307"/></media><caption>RL Series Circuit with Periodic Input Voltage</caption></figure>
			</para>
			<para id="id3962760">The input voltage for the circuit is to be either a square wave or a triangular wave with a period T=2 seconds.</para>
			<para id="id4427504">Compute and display the following:</para>
			<list id="id12202105" list-type="enumerated">
				<item>The Fourier series coefficients of the input voltage 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>v</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{v \( t \) } {}</m:annotation></m:semantics></m:math>,</item>
				<item>the current 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>i</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{i \( t \) } {}</m:annotation></m:semantics></m:math>,</item>
				<item>the RMS (root mean square) value of 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>v</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{v \( t \) } {}</m:annotation></m:semantics></m:math> using (i) the original waveform and (ii) its Fourier series coefficients (compare the outcomes), </item>
				<item>the average power 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:msub><m:mi>P</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>av</m:mtext></m:mrow></m:mstyle></m:mrow></m:mstyle></m:msub></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{P rSub { size 8{ ital "av"} } } {}</m:annotation></m:semantics></m:math>delivered by the source.</item>
			</list>
			<para id="id22584546">Hints:</para>
			<para id="id17153161">RMS Value</para>
			<para id="id14161427">The RMS value of a periodic function 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>v</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{v \( t \) } {}</m:annotation></m:semantics></m:math>with period 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi>T</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{T} {}</m:annotation></m:semantics></m:math>is given by</para>
			<equation id="eq2">
				<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">=</m:mo><m:msqrt><m:mrow><m:mfrac><m:mn>1</m:mn><m:mi>T</m:mi></m:mfrac><m:mrow><m:munder><m:mo stretchy="false">∫</m:mo><m:mstyle fontsize="8pt"><m:mrow><m:mi>T</m:mi></m:mrow></m:mstyle></m:munder><m:mrow><m:msup><m:mi>v</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msup><m:mstyle fontstyle="italic"><m:mrow><m:mtext>dt</m:mtext></m:mrow></m:mstyle></m:mrow></m:mrow></m:mrow></m:msqrt></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{V rSub { size 8{ ital "RMS"} } = sqrt { {  {1}  over  {T} }  Int cSub { size 8{T} }  {v rSup { size 8{2} }  ital "dt"} } } {}</m:annotation></m:semantics></m:math>
			</equation>
			<para id="id4577863">The RMS value of a waveform consisting of sinusoids with different frequencies is equal to the square root of the sum of the squares of the RMS value of each sinusoid. If a waveform is represented by the following Fourier series</para>
			<equation id="id9837945"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>v</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:mrow><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>0</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">+</m:mo><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">±</m:mo><m:msub><m:mi>φ</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">+</m:mo><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">±</m:mo><m:msub><m:mi>φ</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">+</m:mo><m:mtext>.</m:mtext></m:mrow><m:mtext>.</m:mtext><m:mrow><m:mtext>.</m:mtext><m:mo stretchy="false">+</m:mo><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>N</m:mi></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>N</m:mi></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">±</m:mo><m:msub><m:mi>φ</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>N</m:mi></m:mrow></m:mstyle></m:msub></m:mrow><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{v \( t \) =V rSub { size 8{0} } +V rSub { size 8{1} } "sin" \( ω rSub { size 8{1} } t +- φ rSub { size 8{1} }  \) +V rSub { size 8{2} } "sin" \( ω rSub { size 8{2} } t +- φ rSub { size 8{2} }  \) + "."  "."  "." +V rSub { size 8{N} } "sin" \( ω rSub { size 8{N} } t +- φ rSub { size 8{N} }  \) } {}</m:annotation></m:semantics></m:math>
			</equation>
			<para id="id22338913">then, the RMS value 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mstyle></m:msub></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{V rSub { size 8{ ital "RMS"} } } {}</m:annotation></m:semantics></m:math>is given by</para>
			<equation id="id17963930"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">=</m:mo><m:msqrt><m:mrow><m:mrow><m:mrow><m:mrow><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:msup><m:mn>0</m:mn><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msup></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">+</m:mo><m:msup><m:mfenced open="(" close=")"><m:mfrac><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:msqrt><m:mn>2</m:mn></m:msqrt></m:mfrac></m:mfenced><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msup></m:mrow><m:mo stretchy="false">+</m:mo><m:msup><m:mfenced open="(" close=")"><m:mfrac><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:msqrt><m:mn>2</m:mn></m:msqrt></m:mfrac></m:mfenced><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msup></m:mrow><m:mo stretchy="false">+</m:mo><m:mtext>.</m:mtext></m:mrow><m:mtext>.</m:mtext><m:mrow><m:mtext>.</m:mtext><m:mo stretchy="false">+</m:mo><m:msup><m:mfenced open="(" close=")"><m:mfrac><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mi>N</m:mi></m:mrow></m:mstyle></m:msub><m:msqrt><m:mn>2</m:mn></m:msqrt></m:mfrac></m:mfenced><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msup></m:mrow></m:mrow></m:msqrt></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{V rSub { size 8{ ital "RMS"} } = sqrt {V rSub { size 8{0}   rSup { size 8{2} } } + left ( {  {V rSub { size 8{1} } }  over  { sqrt {2} } }  right ) rSup { size 8{2} } + left ( {  {V rSub { size 8{2} } }  over  { sqrt {2} } }  right ) rSup { size 8{2} } + "."  "."  "." + left ( {  {V rSub { size 8{N} } }  over  { sqrt {2} } }  right ) rSup { size 8{2} } } } {}</m:annotation></m:semantics></m:math>  </equation>


			<para id="id4166171">Average power</para>
			<para id="id11972818">The average power of the Fourier series can be expressed as</para>

<equation id="id8604126"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mrow><m:msub><m:mi>P</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mstyle fontstyle="italic"><m:mrow><m:mtext>av</m:mtext></m:mrow></m:mstyle></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">=</m:mo><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>0</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mrow><m:msub><m:mi>I</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>0</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">+</m:mo><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mrow><m:mn>1</m:mn><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mrow></m:mstyle></m:msub></m:mrow><m:msub><m:mi>I</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mrow><m:mn>1</m:mn><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mrow></m:mstyle></m:msub><m:mtext>cos</m:mtext><m:mrow><m:msub><m:mi>φ</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">+</m:mo><m:msub><m:mi>V</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mrow><m:mn>2</m:mn><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mrow></m:mstyle></m:msub></m:mrow><m:msub><m:mi>I</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mrow><m:mn>2</m:mn><m:mstyle fontstyle="italic"><m:mrow><m:mtext>RMS</m:mtext></m:mrow></m:mstyle></m:mrow></m:mrow></m:mstyle></m:msub><m:mtext>cos</m:mtext><m:mrow><m:msub><m:mi>φ</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">+</m:mo><m:mtext>.</m:mtext></m:mrow><m:mtext>.</m:mtext><m:mtext>.</m:mtext></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{P rSub { size 8{ ital "av"} } =V rSub { size 8{0} } I rSub { size 8{0} } +V rSub { size 8{1 ital "RMS"} } I rSub { size 8{1 ital "RMS"} } "cos"φ rSub { size 8{1} } +V rSub { size 8{2 ital "RMS"} } I rSub { size 8{2 ital "RMS"} } "cos"φ rSub { size 8{2} } + "."  "."  "." } {}</m:annotation></m:semantics></m:math> </equation>

		</problem>
		<solution id="eip-28">
			<para id="eip-948">
    Insert Solution Text Here
  </para>
		</solution>
	</exercise><exercise id="eip-426"><problem id="eip-979">
		<para id="id7703566">
			<term>Doppler Effect</term>
		</para>
		<para id="id5502264">The Doppler effect denotes the change in frequency and wavelength of a wave as perceived by an observer moving relative to the wave source. The Doppler effect can be demonstrated via time scaling of Fourier series. The observer hears the siren of an approaching emergency vehicle with different amplitudes and frequencies as compared to the original signal. As the vehicle passes by, the observer hears another amplitude and frequency. The reason for the amplitude change (increased loudness) is because of the proximity of the vehicle. The closer it is, the louder it gets. The reason for frequency (pitch) change is due to the Doppler effect. As the vehicle approaches, each successive compression of the air caused by the siren occurs a little closer than the last one, and the opposite happens when the vehicle passes by. The result is the scaling of the original signal in the time domain, which changes its frequency. When the vehicle approaches, the scaling factor is greater than 1, resulting in a higher frequency, and, when it passes by, the scaling factor is less than 1, resulting in a lower frequency. More theoretical aspects of this phenomenon are covered in reference <link target-id="Ref14" document="m31521"/>. </para>
		<para id="id10629579"> Define the original siren signal as 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>x</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{x \( t \) } {}</m:annotation></m:semantics></m:math>. When the vehicle approaches, one can describe the signal by</para>
		<equation id="id11853875"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>x</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:msub><m:mi>B</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo><m:mi>x</m:mi><m:mo stretchy="false">(</m:mo><m:mstyle fontstyle="italic"><m:mrow><m:mtext>at</m:mtext></m:mrow></m:mstyle><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{x rSub { size 8{1} }  \( t \) =B rSub { size 8{1} }  \( t \) x \(  ital "at" \) } {}</m:annotation></m:semantics></m:math>     </equation>
		<para id="id24459350">where 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>B</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{B rSub { size 8{1} }  \( t \) } {}</m:annotation></m:semantics></m:math>is an increasing function of time (assuming a linear increment with time) and 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi>a</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{a} {}</m:annotation></m:semantics></m:math>is the scaling factor having a value greater than 1. When the vehicle passes by, one can describe the signal by</para>
		<equation id="id4771879"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>x</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:msub><m:mi>B</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo><m:mi>x</m:mi><m:mo stretchy="false">(</m:mo><m:mstyle fontstyle="italic"><m:mrow><m:mtext>bt</m:mtext></m:mrow></m:mstyle><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{x rSub { size 8{2} }  \( t \) =B rSub { size 8{2} }  \( t \) x \(  ital "bt" \) } {}</m:annotation></m:semantics></m:math>    </equation>
		<para id="id5958946">where 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:msub><m:mi>B</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{B rSub { size 8{2} }  \( t \) } {}</m:annotation></m:semantics></m:math>is a decreasing function of time (assuming a linear decrement with time) and 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi>b</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{b} {}</m:annotation></m:semantics></m:math>is the scaling factor having a value less than 1.</para>
		<para id="id4745521"> First, generate a signal and create an upscale and a downscale version of it. Observe the Fourier series for all the signals. Set the amplitude and frequency of the original signal and the scaling factors as controls. In addition, play the sounds using the LabVIEW <term>Play Waveform</term> function. <link target-id="id27852343"/> shows a possible front panel for this type of system.</para>
		<para id="id27163033">
			<figure id="id27852343"><media id="id20998269" alt=""><image src="../../media/Fig4_9.png" mime-type="image/png" height="608" width="600"/></media><caption>Front Panel of a Doppler Effect System</caption></figure></para>
	</problem>
	<solution id="eip-73">
		<para id="eip-66">
    Insert Solution Text Here
  </para>
	</solution>
</exercise>
	<exercise id="eip-840"><problem id="eip-407">
		<para id="id23809282">
			<term>Synthesis of Electronic Music </term>
		</para>
		<para id="id8710533">In electronic music instruments, sound generation is implemented via synthesis. Different types of synthesis techniques such as additive synthesis, subtractive synthesis and frequency modulation (FM) synthesis are used to create audio waveforms. The simplest type of synthesis is additive synthesis, where a composite waveform is created by summing sine wave components, which is basically the inverse Fourier series operation. However, in practice, to create a music sound with rich harmonics requires adding a large number of sine waves, which makes the approach inefficient computationally. To avoid adding a large number of sine waves, modulation with addition is used. This exercise involves the design of algorithms used in the Yamaha DX7 music synthesizer, which debuted in 1983 as the first commercially available digital synthesizer.</para>
		<para id="id16226217">The primary functional circuit in DX7 consists of a digital sine wave oscillator plus a digital envelope generator. Let us use additive synthesis and frequency modulation to achieve synthesis with six configurable operators. When one adds together the output of some operators, an additive synthesis occurs, and when one connects the output of one operator to the input of another operator, a modulation occurs.</para>
		<para id="id7679201">In terms of block diagrams, the additive synthesis of a waveform with four operators is illustrated in <link target-id="id22754679"/>.</para>
		<para id="id23031576">
			<figure id="id22754679"><media id="id20886830" alt=""><image src="../../media/Fig4_10.png" mime-type="image/png" height="114" width="121"/></media><caption>Additive Synthesis</caption></figure>
		</para>
		<para id="id23838304">The output for the combination shown in <link target-id="id22754679"/> can be written as</para>
		<equation id="id18567976"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>y</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>3</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>3</m:mn></m:mrow></m:mstyle></m:msub><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>4</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>4</m:mn></m:mrow></m:mstyle></m:msub><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{y \( t \) =A rSub { size 8{1} } "sin" \( ω rSub { size 8{1} } t \) +A rSub { size 8{2} } "sin" \( ω rSub { size 8{2} } t \) +A rSub { size 8{3} } "sin" \( ω rSub { size 8{3} } t \) +A rSub { size 8{4} } "sin" \( ω rSub { size 8{4} } t \) } {}</m:annotation></m:semantics></m:math> </equation>
		<para id="id3860040"><link target-id="id6073089"/> shows the FM synthesis of a waveform with two operators.</para>
		<figure id="id6073089"><media id="id19407164" alt=""><image src="../../media/Fig4_11.png" mime-type="image/png" height="154" width="110"/></media><caption>FM Synthesis</caption></figure>
		<para id="id6807384">The output for the combination shown in this figure can be written as</para>
		<equation id="id10761783"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>y</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mfenced open="(" close=")"><m:mrow><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mfenced></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{y \( t \) =A rSub { size 8{1} } "sin" left (ω rSub { size 8{1} } t+A rSub { size 8{2} } "sin" \( ω rSub { size 8{2} } t \)  right )} {}</m:annotation></m:semantics></m:math>   </equation>
		<para id="id11974174"> Other than addition and frequency modulation, one can use feedback or self-modulation in DX7, which involves wrapping back and using the output of an operator to modulate the input of the same operator as shown in <link target-id="id11250421"/>.</para>
		<figure id="id11250421"><media id="id24874472" alt=""><image src="../../media/Fig4_12.png" mime-type="image/png" height="102" width="58"/></media><caption>Self-Modulation</caption></figure>
		<para id="id5306332">The corresponding equation is </para>
		<equation id="id14486346"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>y</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mfenced open="(" close=")"><m:mrow><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">+</m:mo><m:mi>y</m:mi></m:mrow><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mfenced></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{y \( t \) =A rSub { size 8{1} } "sin" left (ω rSub { size 8{1} } t+y \( t \)  right )} {}</m:annotation></m:semantics></m:math>   </equation>
		<para id="id6007781">Different arrangements of operators create different algorithms.  <link target-id="id15209168"/> displays the diagram of an algorithm. </para>
		<figure id="id15209168"><media id="id24767193" alt=""><image src="../../media/Fig4_13.png" mime-type="image/png" height="192" width="226"/></media><caption>Diagram of an Algorithm</caption></figure>
		<para id="id4198980">And the output for this algorithm can be written as</para>
		<equation id="id15866868"><m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mi>y</m:mi><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mrow><m:mo stretchy="false">)</m:mo><m:mo stretchy="false">=</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mrow><m:mfenced open="(" close=")"><m:mrow><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>1</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mo stretchy="false">(</m:mo><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>2</m:mn></m:mrow></m:mstyle></m:msub><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mfenced><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>3</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mfenced open="(" close=")"><m:mrow><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>3</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>4</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mfenced open="(" close=")"><m:mrow><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>4</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">+</m:mo><m:msub><m:mi>A</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>5</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mtext>sin</m:mtext><m:mfenced open="(" close=")"><m:mrow><m:msub><m:mi>ω</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>5</m:mn></m:mrow></m:mstyle></m:msub><m:mrow><m:mi>t</m:mi><m:mo stretchy="false">+</m:mo><m:msub><m:mi>y</m:mi><m:mstyle fontsize="8pt"><m:mrow><m:mn>6</m:mn></m:mrow></m:mstyle></m:msub></m:mrow><m:mo stretchy="false">(</m:mo><m:mi>t</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:mfenced></m:mrow></m:mfenced></m:mrow></m:mfenced></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{y \( t \) =A rSub { size 8{1} } "sin" left (ω rSub { size 8{1} } t+A rSub { size 8{2} } "sin" \( ω rSub { size 8{2} } t \)  right )+A rSub { size 8{3} } "sin" left (ω rSub { size 8{3} } t+A rSub { size 8{4} } "sin" left (ω rSub { size 8{4} } t+A rSub { size 8{5} } "sin" left (ω rSub { size 8{5} } t+y rSub { size 8{6} }  \( t \)  right ) right ) right )} {}</m:annotation></m:semantics></m:math> </equation>
		<para id="id13426987">With DX7, one can choose from 32 different algorithms. As one moves from algorithm No. 32 to algorithm No. 1, the harmonics complexity increases. In algorithm No. 32, all six operators are combined using additive synthesis with a self modulator generating the smallest number of harmonics. <link target-id="id23809100"/> shows the diagram for all 32 combinations of operators. More details on music synthesis and the Yamaha DX7 synthesizer can be found in the <link target-id="Ref15" document="m31521"/>-<link target-id="Ref16" document="m31521"/>.</para>
		<para id="id17344672"> Next, explore designing a system with six operators and set their amplitude and frequency as controls. By combining these operators, construct any three algorithms, one from the lower side (for example, algorithm No. 3), one from the middle side (for example, algorithm No. 17) and the final one from the upper side (for example, algorithm No. 30). Observe the output waves in the time and frequency domains (find the corresponding Fourier series).</para>
		<figure id="id23809100"><media id="id19625585" alt=""><image src="../../media/Fig4_14.png" mime-type="image/png" height="429" width="608"/></media><caption>32 Algorithms in the Yamaha DX7</caption></figure>
	</problem>
	<solution id="eip-496">
		<para id="eip-347">
    Insert Solution Text Here
  </para>
	</solution>
</exercise>
</section>

  </content>





</document>